<?php 
/* Cachekey: cache/stash_default/documentation\api\php\2d8f188f53df242f12f80b55a8978b77/ */
/* Type: array */
/* Expiration: 2018-02-15T10:01:57+00:00 */



$loaded = true;
$expiration = 1518688917;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1518265013;
