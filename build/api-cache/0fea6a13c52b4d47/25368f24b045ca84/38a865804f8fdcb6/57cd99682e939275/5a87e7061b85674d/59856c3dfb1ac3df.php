<?php 
/* Cachekey: cache/stash_default/documentation\api\php\ae9a721381b96870c101fe9f32c5651b/ */
/* Type: array */
/* Expiration: 2018-02-15T03:23:09+00:00 */



$loaded = true;
$expiration = 1518664989;

$data = array();

/* Child Type: object */
$data['return'] = unserialize(base64_decode(''));

/* Child Type: integer */
$data['createdOn'] = 1518265013;
